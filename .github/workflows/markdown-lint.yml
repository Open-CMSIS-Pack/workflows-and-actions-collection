name: Markdown

on:
  workflow_call:
    inputs:
      lint-config:
        type: string
        required: false
        default: 'configs/md_lint_config.yml'
        description: Path to markdownlint config file (JSON, JSONC, or YML).
      link-check-config:
        type: string
        required: false
        default: 'configs/mlc_config.json'
        description: Path to markdown link check config file (JSON).
      ignore-files:
        type: string
        required: false
        description: |
          Comma or space separated list of file paths or glob patterns to ignore
          when running markdownlint (e.g. 'docs/*.md,README.md').
env:
  CALLER_DIR: 'caller-repository'
  WORKFLOW_DIR: 'workflows-and-actions-collection'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: Open-CMSIS-Pack/workflows-and-actions-collection
          path: ${{ env.WORKFLOW_DIR }}

      - name: Register markdownlint matcher
        run: echo "::add-matcher::workflows-and-actions-collection/configs/markdownlint.json"

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: ${{ github.event.repository.full_name }}
          path: ${{ env.CALLER_DIR }}

      - name: Determine lint config path
        id: lint-config-path
        run: |
          lint_config='${{ inputs.lint-config }}'
          workflow_dir='${{ env.WORKFLOW_DIR }}'
          caller_dir='${{ env.CALLER_DIR }}'

          if [ "$lint_config" = "configs/md_lint_config.yml" ]; then
            config_path="$workflow_dir/$lint_config"
          else
            config_path="$caller_dir/$lint_config"
          fi
          printf 'config_path=%s\n' "$config_path" >> "$GITHUB_OUTPUT"

      - name: Prefix caller directory to ignore-files
        id: formatted-ignore
        run: |
          IGNORE_INPUT='${{ inputs.ignore-files }}'
          CALLER_DIR='${{ env.CALLER_DIR }}'

          if [ -z "$IGNORE_INPUT" ]; then
            printf 'result=\n' >> "$GITHUB_OUTPUT"
          else
            # Split on commas/spaces, drop empties, prefix each with CALLER_DIR, then join with space
            FORMATTED=$(
              printf '%s\n' "$IGNORE_INPUT" \
              | tr ', ' '\n' \
              | awk -v base="$CALLER_DIR" 'NF{print base "/" $0}' \
              | paste -sd' ' -
            )
            printf 'result=%s\n' "$FORMATTED" >> "$GITHUB_OUTPUT"
          fi

      - name: Run markdownlint
        uses: avto-dev/markdown-lint@04d43ee9191307b50935a753da3b775ab695eceb # v1.5.0
        with:
          args: ${{ env.CALLER_DIR }}/**/*.md
          config: ${{ steps.lint-config-path.outputs.config_path }}
          ignore: ${{ steps.formatted-ignore.outputs.result }}

      - name: Cleanup markdownlint matcher
        if: always()
        run: echo "::remove-matcher owner=markdownlint::"

  check-links:
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: ${{ github.event.repository.full_name }}
          path: ${{ env.CALLER_DIR }}

      - name: Determine link check config path
        id: link-config-path
        run: |
          link_cfg='${{ inputs.link-check-config }}'
          workflow_dir='${{ env.WORKFLOW_DIR }}'
          caller_dir='${{ env.CALLER_DIR }}'

          if [ "$link_cfg" = "configs/mlc_config.json" ]; then
            config_path="$workflow_dir/$link_cfg"
          else
            config_path="$caller_dir/$link_cfg"
          fi
          printf 'config_path=%s\n' "$config_path" >> "$GITHUB_OUTPUT"

      - name: Check markdown links
        uses: tcort/github-action-markdown-link-check@a800ad5f1c35bf61987946fd31c15726a1c9f2ba # v1.1.0
        with:
          use-quiet-mode: 'no'
          use-verbose-mode: 'yes'
          config-file: ${{ steps.link-config-path.outputs.config_path }}
