name: Quality and Security Checks

on:
  workflow_call:
    # inputs:
    #   lint-config:
    #     type: string
    #     required: false
    #     default: 'configs/md_lint_config.yml'
    #     description: Path to markdownlint config file (JSON, JSONC, or YML).
    #   link-check-config:
    #     type: string
    #     required: false
    #     default: 'configs/mlc_config.json'
    #     description: Path to markdown link check config file (JSON).
    #   ignore-files:
    #     type: string
    #     required: false
    #     description: |
    #       Comma or space separated list of file paths or glob patterns to ignore
    #       when running markdownlint (e.g. 'docs/*.md,README.md').
env:
  CALLER_DIR: 'caller-repository'
  WORKFLOW_DIR: 'workflows-and-actions-collection'

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout caller repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: ${{ github.event.repository.full_name }}
          path: ${{ env.CALLER_DIR }}

      - name: List files 
        run: ls -R

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: ${{ env.CALLER_DIR }}/go.mod
          cache-dependency-path: |
            ${{ env.CALLER_DIR }}/**/go.mod
            ${{ env.CALLER_DIR }}/**/go.sum

      - uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: latest
          skip-cache: true
          working-directory: ${{ env.CALLER_DIR }}

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout caller repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: ${{ github.event.repository.full_name }}
          path: ${{ env.CALLER_DIR }}

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: ${{ env.CALLER_DIR }}/go.mod
          cache-dependency-path: |
            ${{ env.CALLER_DIR }}/**/go.mod
            ${{ env.CALLER_DIR }}/**/go.sum

      - name: Check formatting
        working-directory: ${{ env.CALLER_DIR }}
        run: |
          make format-check

  go-security-scan:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout caller repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: ${{ github.event.repository.full_name }}

      - name: Run Gosec Security Scanner
        uses: securego/gosec@c9453023c4e81ebdb6dde29e22d9cd5e2285fb16 # v2.22.8
        with:
          args: '-severity high -exclude-dir=testdata -exclude=*_test.go ./...'

  vuln-check:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Scan for Vulnerabilities
        uses: golang/govulncheck-action@b625fbe08f3bccbe446d94fbf87fcc875a4f50ee # v1.0.4
        with:
          go-version-file: go.mod
          check-latest: true
          go-package: ./...